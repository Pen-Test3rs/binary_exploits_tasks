#!/usr/bin/env python3
import subprocess
import argparse

from common import load_flags, get_tasks


def solve_task(task_folder, flag):
    try:
        process_args = ['python3', 'solve.py', 'REMOTE']
        if not args.get('local'):
            process_args.extend(['ADDR=starfish.server.nitychoruk.pl'])

        output = subprocess.check_output(process_args, timeout=10, cwd=task_folder)
        if args.get('debug'):
            print(output)

        expected_flag = f'flAGH{{{flag}}}'.encode()
        if expected_flag in output:
            return True

    except Exception as e:
        print(e)

    return False


def check_tasks(flags):
    success, failed = 0, 0
    for task_name, task_folder in get_tasks():
        print(f"Testing {task_name}...")
        flag = flags.get(task_name.split('-')[0])
        ok = False
        if flag:
            ok = solve_task(task_folder, flag)
            print(f'{task_name} - {"OK" if ok else "FAILED"}')

        if ok:
            success += 1
        else:
            failed += 1

    print(f"Tasks checked! {success} OK, {failed} FAILED")


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Health checker')
    parser.add_argument('--debug', default=False, action='store_true',
                        help='shows output from every solve script')
    parser.add_argument('--local', default=False, action='store_true', 
                        help='performs healthcheck on localhost')

    args = vars(parser.parse_args())

    check_tasks(load_flags())
