#!/usr/bin/env python3
import os
import json
import pathlib


def load_flags():
    with open('config.json') as json_file:
        data = json.load(json_file)
        if 'flags' not in data:
            raise Exception("No flags in config")
        
        print("Flag config loaded")
        return data['flags']


def build_if_not_exists(task_path):
    files_list = os.listdir(task_path)
    if 'task' in files_list:
        return

    print(f'Building {task_path}...')
    os.system(f'cd {task_path} && make')


def copy_if_not_exists(file, task_path):
    file_path = task_path / file
    if file_path.exists():
        return

    print(f"Copying {file} to {task_path}")
    os.system(f'cp {file} {task_path}')


def prepare_tasks(flags):
    tasks = map(lambda f: (f.name, f.path), filter(lambda f: f.is_dir(), os.scandir('./tasks')))
    for task_name, task_folder in tasks:
        task_folder = pathlib.Path(task_folder)
        print(task_name)
        task_number = task_name.split('-')[0]
        flag = flags.get(task_number)
        if flag is None:
            print(f'{task_name} has not flag set, defaulting to: default_flag')
            flag = "default_flag"

        with open(f'{task_folder}/flag.txt', "w") as file:
            file.write(f'flAGH{{{flag}}}\n')

        copy_if_not_exists('Dockerfile', task_folder)
        copy_if_not_exists('nsjail.sh', task_folder)
        build_if_not_exists(task_folder)

    print("Done!")


if __name__ == '__main__':
    prepare_tasks(load_flags())
